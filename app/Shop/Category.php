<?php

namespace App\Shop;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;
use TCG\Voyager\Traits\Translatable;

class Category extends Model
{
    use Translatable;
    protected $fillable = ['name', 'url', 'desc', 'page_title', 'page_description', 'images', 'active', 'external_id', 'parent_id'];
    protected $appends = ['link'];
    protected $table = 'categories';
    protected $translatable = ['name', 'desc', 'page_title', 'page_description'];

    public static function all($columns = ['*'])
    {
        $categories = Category::active()->where('parent_id', null)->get();
        foreach ($categories as $c){
            $c->load('childrens');
            foreach ($c->childrens as $ch2){
                $ch2->load('childrens');
            }
        }
        return $categories;
    }
    public function getLinkAttribute(){
        return $this->getLink();
    }
    public function getLink(){
        $parent_1 = $this->parent;
        if($parent_1){
            $parent_2 = $parent_1->parent;
        }
        if(isset($parent_2) && $parent_2) return route('category.show', ['slug' => $parent_2->url, 'slug2' => $parent_1->url, 'slug3' => $this->url]);
        if($parent_1) return route('category.show', ['slug' => $parent_1->url, 'slug2' => $this->url]);
        return route('category.show', ['slug' => $this->url]);
    }
    public function getImage(){
        $arr = array();

        if($this->images == '' && $this->images == null){
            $arr = ['default/brak_zdjecia.png'];

        }else{
            $arr = json_decode($this->images);
            if(count($arr) == 0) $arr = ['default/brak_zdjecia.png'];
        }
        return json_encode($arr);
    }
    public function scopeActive($q){
        $q->where('active', 1);
        return $q;
    }
    public function delete()
    {
        return parent::delete(); // TODO: Change the autogenerated stub
    }
    public function products(){
        return $this->hasMany('App\Product');
    }
    public function parent(){
        return $this->belongsTo('App\Shop\Category', 'parent_id');
    }
    public function childrens(){
        return $this->hasMany('App\Shop\Category', 'parent_id');
    }
    public function getHeader(){
        $term = '';
        $term = $term.$this->page_title;
        return $term;
    }
    public function getUrl(){
        $url = route('category', ['slug' => $this->url]);
        return $url;
    }
}
