<?php

namespace App\Http\Controllers\Voyager;

use App\Attribute;
use App\Helpers\Helper;
use App\Http\Controllers\Voyager\VoyagerBaseController;
use App\Product;
use App\ProductAttribute;
use Illuminate\Http\Request;
use Intervention\Image\Image;
use PHPUnit\TextUI\Help;

class ProductController extends VoyagerBaseController
{
    public function store(Request $request)
    {
        $request->validate([
            'main_image' => 'dimensions:ratio=1/1'
        ], [
            'main_image.dimensions' => 'Wymiary głównego obrazka powinny być kwadratowe'
        ]);
        $to_return = parent::store($request); // TODO: Change the autogenerated stub
        $product = Product::orderBy('created_at', 'desc')->first();
        if($product && $product->name == $request->name){
            $this->setAttributes($request, $product);
        }
        return $to_return;
    }
    public function update(Request $request, $id)
    {
        $request->validate([
            'main_image' => 'dimensions:ratio=1/1'
        ], [
            'main_image.dimensions' => 'Wymiary głównego obrazka powinny być kwadratowe'
        ]);
        $product = Product::find($id);
        $this->setAttributes($request, $product);
        return parent::update($request, $id); // TODO: Change the autogenerated stub
    }
    public function settings($id){
        $product = Product::find($id);
        return view('vendor.voyager.products.settings', compact('product'));
    }
    public function setAttributes($request, $product){
        try{
            $attributes = json_decode($request->get('attributes'));
        }catch(\Exception $e){}
        if(isset($attributes)){
            ProductAttribute::where('product_id', $product->id)->delete();
            foreach ($attributes as $key => $attr){
                if(is_array($attr)){
                    foreach ($attr as $item){
                        $tmp = Attribute::find($key);
                        ProductAttribute::create([
                            'product_id' => $product->id,
                            'attribute_id' => $tmp->id,
                            'value' => $item->value
                        ]);
                    }
                }else{
                    $tmp = Attribute::find($key);
                    ProductAttribute::create([
                        'product_id' => $product->id,
                        'attribute_id' => $tmp->id,
                        'value' => $attr
                    ]);
                }
            }
        }
    }
}
